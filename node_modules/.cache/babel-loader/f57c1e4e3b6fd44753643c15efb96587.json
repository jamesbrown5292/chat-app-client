{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jamesbrown/lighthouse/garagesale/chatapp/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport TextContainer from '../TextContainer/TextContainer';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/Messages';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      alert(error);\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n    socket.on('roomData', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []); // function for sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"NKZGbzfWHlS0Y+OfA88k1uWyNPI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jamesbrown/lighthouse/garagesale/chatapp/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","TextContainer","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","alert","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client'\nimport './Chat.css'\n\nimport TextContainer from '../TextContainer/TextContainer';\nimport InfoBar from '../InfoBar/InfoBar'\nimport Input from '../Input/Input'\nimport Messages from '../Messages/Messages'\nlet socket;\n\nconst Chat = ({ location }) => {\n  \n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  \n  const ENDPOINT = 'localhost:5000'\n\n\n  useEffect(() => {\n    const {name, room} = queryString.parse(location.search);\n    \n    socket = io(ENDPOINT)\n    setName(name)\n    setRoom(room)\n\n    socket.emit('join', { name, room }, (error) => {\n      alert(error);\n    });\n\n    return() => {\n      socket.emit('disconnect');\n      socket.off();\n    }\n\n  }, [ENDPOINT, location.search]);\n\n  useEffect(() => {\n\n    socket.on('message', (message) => {\n      setMessages([...messages, message]);\n    })\n\n    socket.on('roomData', ( {users}) => {\n      setUsers(users);\n    })\n\n  }, [])\n\n  // function for sending messages\n  const sendMessage = (event) => {\n    event.preventDefault();\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n\n  console.log(message, messages)\n\n  return(\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n        <InfoBar room={room} />\n        <Messages messages={messages} name={name}/>\n        <Input \n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n      <TextContainer users={users} />\n    </div>\n  )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}